import csv
import os
import pandas as pd
import xml.etree.ElementTree as ET

# Make 1E-8 into zeros?
# Load in headers from separate file?
# Why is .split() neccessary?
# change name to GEM
# Index all values 

tree = ET.parse('GEM/vulnerability_structural.xml')
root = tree.getroot()

def directories():
    rootdir = "./global_vulnerability_model"
    CONT = []
    COUNT = []
    paths = []
    for subdir, dirs, files in os.walk(rootdir):
        for file in files:
            subdir = subdir.replace('\\', '/')
            filepath = subdir + '/' + file
            if filepath.endswith("vulnerability_structural.xml"):
                location = subdir.replace('./global_vulnerability_model/', '').replace('/', ' ').split()
                paths += [filepath]
                CONT += [location[0]]
                COUNT += [location[1]]
    return CONT, COUNT, paths

def generate_arrays(path):
    IMT, TAX, INT, MLR, CoV= [0 for x in range (len(root[0])-1)], [0 for x in range (len(root[0])-1)], [0 for x in range (len(root[0])-1)], [0 for x in range (len(root[0])-1)], [0 for x in range (len(root[0])-1)]
    for i in range (len(IMT)):
        IMT[i] = root[0][i+1][0].attrib['imt']
        INT[i] = root[0][i+1][0].text
        INT[i] =INT[i].strip()
        TAX[i] = root[0][i+1].attrib['id']
        MLR[i] = root[0][i+1][1].text 
        MLR[i] = MLR[i].strip()
        CoV[i] = root[0][i+1][2].text
        CoV[i] = CoV[i].strip()
    
    return IMT, TAX, INT, MLR, CoV

def main():    
    identity = directories()
    CONT, COUNT, path = identity[0], identity[1], identity[2]
    header = generate_arrays(path)
    IMT, TAX, INT, MLR, CoV = header[0], header[1], header[2], header [3], header[4]
    #dict = {'Continent': CONT, 'Countries': COUNT, 'IntensityMeasureType': IMT, 'Taxonomy': TAX, 'Intensity': INT, 'MeanLossRatio': MLR, 'LossRatioCovariance': CoV}
    dict = {'IntensityMeasureType': IMT, 'Taxonomy': TAX, 'Intensity': INT, 'MeanLossRatio': MLR, 'LossRatioCovariance': CoV}
    # df = pd.DataFrame(dict)
    # df.to_csv('GEM/template2.csv', index=False)
    print (INT[0].replace(' ', '\n'))

main()
