import csv
import os
import pandas as pd
import xml.etree.ElementTree as ET
import itertools

#Intensity Type is root[0][i][0].attrib['imt']
#Taxonomy is root[0][i].attrib['id']
#Intensity is root[0][i][0].text
#MeanLR is root[0][i][1].text
#CoV is root[0][i][2].text

def directories():
    rootdir = "./global_vulnerability_model"
    location_dict = {}
    for subdir, dirs, files in os.walk(rootdir):
        for file in files:
            subdir = subdir.replace('\\', '/')
            filepath = subdir + '/' + file
            if filepath.endswith("vulnerability_structural.xml"):
                coverage_type = 'Structural'
                location = subdir.replace('./global_vulnerability_model/', '').replace('/', ' ').split()
                location_dict [location[0], location[1]] = filepath
    return location_dict, coverage_type

def generate_arrays(location_list, coverage_type):
    for (continent, country) in location_list:
        pathway = location_list[(continent, country)]
        tree = ET.parse(pathway)
        root = tree.getroot()
        vuln_ids = {}
        cur_vuln_id = 1
        for i in range (len(root[0])-1):
            for j, (intensity, MLR, CoV) in enumerate (zip(root[0][i+1][0].text.strip().split(' '), root[0][i+1][1].text.strip().split(' '), root[0][i+1][2].text.strip().split(' '))):
                IntensityMeasureType = root[0][i+1][0].attrib['imt']
                taxonomy = root[0][i+1].attrib['id']
                if (continent, country) not in vuln_ids:
                    vuln_ids[(continent, country, taxonomy)] = cur_vuln_id
                    cur_vuln_id += 1
                rec = {
                    "ValuationID": vuln_ids[(continent, country, taxonomy)],
                    "IntensityBinID": j+1, 
                    }
                yield rec

def main():    
    directory = directories()
    location_list = directory [0]
    coverage_type = directory [1]
    header = generate_arrays(location_list, coverage_type)
    df = pd.DataFrame(header)
    #print(df)
    #df.to_csv('GEM/toeprint.csv', index=False)
    print (df.head(1000))

main()