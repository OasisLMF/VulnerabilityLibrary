import rasterio
import numpy as np
import pandas as pd
import csv
from decimal import Decimal

raster_filepath = 'GlobalFloodingVariants/PH_TW_20240724_Typhoon_Gaemi_FLRF_D_RD_30m_4326.tif'
oasis_footprint_filepath = 'GlobalFloodingVariants/footprint.csv'
area_peril_dict_filepath = 'GlobalFloodingVariants/area_peril_dict.csv'
footprint_fieldnames = ["event_id","area_peril_id","intensity_bin_id","probability"]
area_peril_dict_fieldnames = ["area_peril_id","longitude","latitude"]

with rasterio.open(raster_filepath) as image:
         
    max_lat = image.bounds[3]
    min_lat = image.bounds[1]
    max_long = image.bounds[2]
    min_long = image.bounds[0]
    no_height_pixels = image.height
    no_width_pixels = image.width
    raster = image.read(1)

def create_intensity_bins(no_bins,bin_size):

    dec = Decimal(str(bin_size))
    no_dp = (-1 * dec.as_tuple()[2])

    for i in range(no_bins):
        bin_min = np.round(i * bin_size, no_dp)
        bin_max = np.round((i+1) * bin_size, no_dp)
        interpolation = (bin_min + bin_max) / 2
        intesity_bin = {'intensity_bin_id': i+1, 'bin_from': bin_min, 'bin_to': bin_max, 'interpolation': interpolation}
        yield intesity_bin

def create_footprint(int_bins):

    areaperil_id = 0

    for row in raster:
        for intensity in row:

            if intensity < -3e+38:
                continue
            
            areaperil_id += 1
            differences = abs(int_bins['interpolation'] - intensity)
            intensity_bin_id = int_bins['intensity_bin_id'][differences.idxmin()]
            footprint_row = { "event_id": 1, "area_peril_id": areaperil_id, "intensity_bin_id": intensity_bin_id, "probability": 1}
            yield footprint_row
            
def create_areaperil_dict():
    
    width_per_pixel = (max_long - min_long) / no_width_pixels
    height_per_pixel = (max_lat - min_lat) / no_height_pixels

    lat_incr = 0
    areaperil_id = 0
    
    for row in raster:
        
        long_incr = 0
        latitude = height_per_pixel * (0.5 + lat_incr) + min_lat

        for intensity in row:
            
            longitude = width_per_pixel * (0.5 + long_incr) + max_long
            long_incr += 1
            
            if intensity < -3e+38:
                continue
            
            areaperil_id += 1
            areaperil_dict = { "area_peril_id": areaperil_id, "longitude": longitude, "latitude": latitude}
            yield areaperil_dict
        lat_incr += 1

def create_files(filepaths, fieldnames, generators):

    for i in range(len(filepaths)):
        
        with open(filepaths[i], mode='w', newline='') as file:

            writer = csv.DictWriter(file, fieldnames[i])

            writer.writeheader()

            for row in generators[i]:
                writer.writerow(row)


def main():
    int_bins = pd.DataFrame(create_intensity_bins(100,0.2))
    create_files([oasis_footprint_filepath,area_peril_dict_filepath], [footprint_fieldnames,area_peril_dict_fieldnames], [create_footprint(int_bins), create_areaperil_dict()])

main()